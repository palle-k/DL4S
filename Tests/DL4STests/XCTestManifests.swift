#if !canImport(ObjectiveC)
import XCTest

extension ConvTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConvTests = [
        ("testConv", testConv),
        ("testConv1", testConv1),
        ("testIm2col", testIm2col),
    ]
}

extension EngineV2Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EngineV2Tests = [
        ("testBroadcast1", testBroadcast1),
        ("testBroadcast2", testBroadcast2),
        ("testBroadcast3", testBroadcast3),
        ("testBroadcast4", testBroadcast4),
        ("testBroadcast5", testBroadcast5),
        ("testReduceOps", testReduceOps),
        ("testReduceSum1", testReduceSum1),
        ("testReduceSum2", testReduceSum2),
        ("testReduceSum3", testReduceSum3),
    ]
}

extension GANTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GANTests = [
        ("testGAN", testGAN),
    ]
}

extension GradientTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GradientTests = [
        ("testGradient", testGradient),
        ("testMatMul", testMatMul),
        ("testSecondDerivative", testSecondDerivative),
        ("testXRNN", testXRNN),
    ]
}

extension MNISTTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MNISTTests = [
        ("testConvNet", testConvNet),
        ("testFCN", testFCN),
        ("testGRU", testGRU),
    ]
}

extension MemTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MemTests = [
        ("testSliceRead", testSliceRead),
    ]
}

extension PerformanceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PerformanceTests = [
        ("testHeaviside", testHeaviside),
    ]
}

extension ResNetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResNetTests = [
        ("testResNet", testResNet),
    ]
}

extension UtilTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UtilTests = [
        ("testFileReader", testFileReader),
    ]
}

extension VecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VecTests = [
        ("testAddBackwards", testAddBackwards),
        ("testAddBackwards2", testAddBackwards2),
        ("testAddBackwards3", testAddBackwards3),
        ("testAddBackwards4", testAddBackwards4),
        ("testAxisSum", testAxisSum),
        ("testDivBackwards", testDivBackwards),
        ("testDivBackwards2", testDivBackwards2),
        ("testDivBackwards3", testDivBackwards3),
        ("testGradientAddMul", testGradientAddMul),
        ("testGradientExp", testGradientExp),
        ("testGradientLog", testGradientLog),
        ("testGradientMatmul", testGradientMatmul),
        ("testLog", testLog),
        ("testMMul1x1", testMMul1x1),
        ("testMMul1x2", testMMul1x2),
        ("testMMul2x1", testMMul2x1),
        ("testMMul2x2", testMMul2x2),
        ("testMMul2x2_2", testMMul2x2_2),
        ("testMulBackwards", testMulBackwards),
        ("testMulBackwards2", testMulBackwards2),
        ("testMulBackwards3", testMulBackwards3),
        ("testNeg", testNeg),
        ("testNegativeIndices", testNegativeIndices),
        ("testPadding", testPadding),
        ("testSigmoid", testSigmoid),
        ("testSubBackwards", testSubBackwards),
        ("testSubBackwards2", testSubBackwards2),
        ("testSubBackwards3", testSubBackwards3),
        ("testVecOps2", testVecOps2),
        ("testVectorReadSlice", testVectorReadSlice),
        ("testVectorWrite", testVectorWrite),
        ("testVectorWriteItem", testVectorWriteItem),
        ("testVectorWriteItem2", testVectorWriteItem2),
        ("testIPP", testIPP),
    ]
}

extension VectorXORTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VectorXORTest = [
        ("testXNN", testXNN),
    ]
}

extension WGANGPTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WGANGPTests = [
        ("testWGANGP", testWGANGP),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ConvTests.__allTests__ConvTests),
        testCase(EngineV2Tests.__allTests__EngineV2Tests),
        testCase(GANTests.__allTests__GANTests),
        testCase(GradientTests.__allTests__GradientTests),
        testCase(MNISTTests.__allTests__MNISTTests),
        testCase(MemTests.__allTests__MemTests),
        testCase(PerformanceTests.__allTests__PerformanceTests),
        testCase(ResNetTests.__allTests__ResNetTests),
        testCase(UtilTests.__allTests__UtilTests),
        testCase(VecTests.__allTests__VecTests),
        testCase(VectorXORTest.__allTests__VectorXORTest),
        testCase(WGANGPTests.__allTests__WGANGPTests),
    ]
}
#endif
